paths:
  /api/businesses:
    get:
      tags:
        - Businesses
      summary: Get all businesses from the database
      operationId: getAllBusinesses
      responses:
        "200":
          description: Businesses fetched successfully from the database
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessesResponse"
        "401":
          description: Unauthorized. Token expired
        "403":
          description: Forbidden. Invalid credentials
        "500":
          description: Internal Server Error

    post:
      tags:
        - Businesses
      summary: Create business.
      operationId: createBusiness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Business"
      responses:
        "201":
          description: Business created successfully.
        "400":
          description: Request Failed.

  /api/businesses/{id}:
    get:
      tags:
        - Businesses
      summary: Get a business by ID
      operationId: getBusinessByID
      parameters:
        - name: id
          in: path
          required: true
          description: Business ID.
          schema:
            type: string
      responses:
        200:
          description: Business found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Business"
        404:
          description: Business not found.

    put:
      tags:
        - Businesses
      summary: Update a business by his ID
      operationId: updateBusinessesById
      parameters:
        - name: id
          in: path
          required: true
          description: Business ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Business"
      responses:
        "200":
          description: Business updated successfully
        "400":
          description: Request failed
        "404":
          description: Business not found

    delete:
      tags:
        - Businesses
      summary: Delete a business by their ID
      operationId: deleteBusinessesById
      parameters:
        - name: id
          in: path
          required: true
          description: Business ID
          schema:
            type: string
      responses:
        "200":
          description: Business successfully removed
        "400":
          description: Request failed
        "404":
          description: Business not found

  /api/businesses/mockingbusinesses/{total}:
    post:
      tags:
        - Businesses
      summary: Create mock businesses.
      operationId: createMockBusinesses
      parameters:
        - name: total
          in: path
          required: true
          description: Total number of businesses
          schema:
            type: number
      responses:
        "201":
          description: Mock businesses created successfully.
        "400":
          description: Request Failed.

components:
  schemas:
    Business:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Autogenerated Mongo DB ID
        name:
          type: string
          description: Business name
        products:
          type: array
          description: Business products
      example:
        name: Tesoreria Galactica
        products: []

    BusinessesResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success, error]
          description: Businesses response status
        payload:
          type: array
          description: Businesses array list
          items:
            $ref: "#/components/schemas/Business"
